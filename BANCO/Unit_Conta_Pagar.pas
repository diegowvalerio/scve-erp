unit Unit_Conta_Pagar;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, ExtCtrls, Grids, DBGrids, ComCtrls, DB,
  IBCustomDataSet, Mask, DBCtrls, ToolEdit, RXDBCtrl, IBQuery, CurrEdit,
  IBSQL, IBDatabase, RxMemDS;

type
  TMov_Conta_Pagar = class(TForm)
    PageControl1: TPageControl;
    Tab_Pesquisa: TTabSheet;
    Tab_Cadastro: TTabSheet;
    Rg_tipo: TRadioGroup;
    GroupBox1: TGroupBox;
    Edit1: TEdit;
    btn_comfirmar: TBitBtn;
    btn_cancelar: TBitBtn;
    Ds_Conta_Pagar: TDataSource;
    Tab_Pagas: TTabSheet;
    DBGrid2: TDBGrid;
    DataSource1: TDataSource;
    IBQuery1: TIBQuery;
    BitBtn1: TBitBtn;
    TExecutaSql: TIBTransaction;
    ExecutaSql: TIBSQL;
    Q_caixa: TIBQuery;
    Q_caixaID_CAIXA: TIntegerField;
    Q_caixaVL_INICIAL: TFloatField;
    Q_caixaDT_INICIAL: TDateField;
    Q_caixaVL_FECHA: TFloatField;
    Q_caixaDT_FECHA: TDateField;
    IBQuery1ID_CONTA_PAGAR: TIntegerField;
    IBQuery1VL_TOTAL_FATURA: TFloatField;
    IBQuery1VL_TOTAL_PAGO: TFloatField;
    IBQuery1HISTORICO: TIBStringField;
    IBQuery1ID_COMPRA: TIntegerField;
    IBQuery1ID_FORNECEDOR: TIntegerField;
    IBQuery1NOME_FORNECEDOR: TIBStringField;
    GroupBox2: TGroupBox;
    Label1: TLabel;
    DBEdit1: TDBEdit;
    Label2: TLabel;
    DBEdit2: TDBEdit;
    Label3: TLabel;
    DBEdit3: TDBEdit;
    Label4: TLabel;
    DBEdit4: TDBEdit;
    Label5: TLabel;
    DBEdit5: TDBEdit;
    Label6: TLabel;
    DBEdit6: TDBEdit;
    Label13: TLabel;
    Label11: TLabel;
    CurrencyEdit1: TCurrencyEdit;
    DBGrid3: TDBGrid;
    Ds_Parcela: TDataSource;
    Tab_Parcela: TIBDataSet;
    Tab_ParcelaID_CONTA_RECEBER: TIntegerField;
    Tab_ParcelaID_CONTA_PAGAR: TIntegerField;
    Tab_ParcelaVL_PARCELA: TFloatField;
    Tab_ParcelaDT_VENCIMENTO: TDateField;
    Tab_ParcelaDT_PAGAMENTO: TDateField;
    Tab_ParcelaDESCONTO: TFloatField;
    Tab_ParcelaJUROS: TFloatField;
    Tab_ParcelaVL_PAGO: TFloatField;
    Tab_ParcelaNUM_PARC: TIntegerField;
    Tab_ParcelaID_CONTA_PAGAR1: TIntegerField;
    Q_Parcela: TIBQuery;
    DsQ_Parcela: TDataSource;
    Q_ParcelaID_CONTA_RECEBER: TIntegerField;
    Q_ParcelaID_CONTA_PAGAR: TIntegerField;
    Q_ParcelaVL_PARCELA: TFloatField;
    Q_ParcelaDT_VENCIMENTO: TDateField;
    Q_ParcelaDT_PAGAMENTO: TDateField;
    Q_ParcelaDESCONTO: TFloatField;
    Q_ParcelaJUROS: TFloatField;
    Q_ParcelaVL_PAGO: TFloatField;
    Q_ParcelaNUM_PARC: TIntegerField;
    DBGrid1: TDBGrid;
    GroupBox3: TGroupBox;
    Label14: TLabel;
    DBEdit8: TDBEdit;
    Label15: TLabel;
    DBEdit9: TDBEdit;
    DBEdit7: TDBLookupComboBox;
    TabSheet1: TTabSheet;
    GroupBox4: TGroupBox;
    Label21: TLabel;
    Label22: TLabel;
    Label23: TLabel;
    Label24: TLabel;
    Label25: TLabel;
    Label26: TLabel;
    Label27: TLabel;
    DBEdit15: TDBEdit;
    DBEdit16: TDBEdit;
    DBEdit18: TDBEdit;
    DBEdit19: TDBEdit;
    CurrencyEdit3: TCurrencyEdit;
    GroupBox5: TGroupBox;
    Label28: TLabel;
    Label29: TLabel;
    Label30: TLabel;
    CurrencyEdit4: TCurrencyEdit;
    CurrencyEdit5: TCurrencyEdit;
    DateEdit2: TDateEdit;
    BitBt: TBitBtn;
    BitBtn4: TBitBtn;
    DBGrid4: TDBGrid;
    Rx_Parcela: TRxMemoryData;
    Rx_Parcelavl_parcela: TFloatField;
    Rx_Parceladt_vencimento: TDateField;
    Rx_Parcelanun_parc: TIntegerField;
    DsMemoria_Parcela: TDataSource;
    GroupBox6: TGroupBox;
    Label31: TLabel;
    Label32: TLabel;
    Label33: TLabel;
    Edit4: TEdit;
    CurrencyEdit6: TCurrencyEdit;
    BitBtn5: TBitBtn;
    CurrencyEdit7: TCurrencyEdit;
    BitBtn6: TBitBtn;
    DBEdit20: TDBLookupComboBox;
    BitBtn2: TBitBtn;
    DBEdit17: TDBEdit;
    BitBtn3: TBitBtn;
    Label12: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Tab_Conta_Pagar2: TIBDataSet;
    Tab_Conta_Pagar2ID_CONTA_PAGAR: TIntegerField;
    Tab_Conta_Pagar2VL_TOTAL_FATURA: TFloatField;
    Tab_Conta_Pagar2VL_TOTAL_PAGO: TFloatField;
    Tab_Conta_Pagar2HISTORICO: TIBStringField;
    Tab_Conta_Pagar2ID_COMPRA: TIntegerField;
    Tab_Conta_Pagar2ID_FORNECEDOR: TIntegerField;
    Ds_Conta_Pagar2: TDataSource;
    CurrencyEdit2: TCurrencyEdit;
    CurrencyEdit8: TCurrencyEdit;
    CurrencyEdit9: TCurrencyEdit;
    DateEdit1: TDateEdit;
    btn_fechar: TBitBtn;
    btn_contaspagas: TBitBtn;
    btn_excluir: TBitBtn;
    btn_alterar: TBitBtn;
    btn_incluir: TBitBtn;
    Tab_Conta_Pagar: TIBDataSet;
    Tab_Conta_PagarID_CONTA_PAGAR: TIntegerField;
    Tab_Conta_PagarVL_TOTAL_FATURA: TFloatField;
    Tab_Conta_PagarVL_TOTAL_PAGO: TFloatField;
    Tab_Conta_PagarHISTORICO: TIBStringField;
    Tab_Conta_PagarID_COMPRA: TIntegerField;
    Tab_Conta_PagarID_FORNECEDOR: TIntegerField;
    Tab_Conta_PagarDTVENCIMENTO: TDateField;
    Tab_Conta_PagarNOME_FORNECEDOR: TIBStringField;
    Tab_Conta_Pagar2DTVENCIMENTO: TDateField;
    procedure btn_fecharClick(Sender: TObject);
    procedure habilita_botoes;
    procedure desabilita_botoes;
    procedure btn_incluirClick(Sender: TObject);
    procedure btn_alterarClick(Sender: TObject);
    procedure btn_cancelarClick(Sender: TObject);
    procedure btn_confirmaOnClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure PageControl1Changing(Sender: TObject;
      var AllowChange: Boolean);
    procedure btn_excluirClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btn_contaspagasClick(Sender: TObject);
    procedure DBGrid2DblClick(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
    procedure BitBtClick(Sender: TObject);
    procedure BitBtn4Click(Sender: TObject);
    procedure Edit4Exit(Sender: TObject);
    procedure BitBtn5Click(Sender: TObject);
    procedure DBEdit17Exit(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
    procedure DBGrid3CellClick(Column: TColumn);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure DBEdit20Enter(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Mov_Conta_Pagar: TMov_Conta_Pagar;
  nun_parc : Integer;
implementation

uses UnitMenu, Unit_DM, ConvUtils;

{$R *.dfm}

procedure TMov_Conta_Pagar.btn_fecharClick(Sender: TObject);
begin
Close;
end;

procedure TMov_Conta_Pagar.Habilita_botoes;
begin
 btn_incluir.enabled := True;
 btn_alterar.enabled := True;
 btn_excluir.enabled := True;
 btn_fechar.enabled := True;
end;

procedure TMov_Conta_Pagar.Desabilita_botoes;
begin
 btn_incluir.enabled := False;
 btn_alterar.enabled := False;
 btn_excluir.enabled := False;
 btn_fechar.enabled := False;
end;
procedure TMov_Conta_Pagar.btn_incluirClick(Sender: TObject);
begin
desabilita_botoes;
PageControl1.ActivePage := TabSheet1;
Tab_Conta_Pagar2.Open;
Tab_Conta_Pagar2.Insert;
DBEdit18.Text := '0';
DBEdit17.Text := '0';
DBEdit19.Visible := fALSE;
Label25.Visible := False;
end;

procedure TMov_Conta_Pagar.btn_alterarClick(Sender: TObject);
begin
desabilita_botoes;
PageControl1.ActivePage := Tab_Cadastro;
Tab_Conta_Pagar.Edit;

end;

procedure TMov_Conta_Pagar.btn_cancelarClick(Sender: TObject);
begin
habilita_botoes;
PageControl1.ActivePage := Tab_Pesquisa;
Tab_Conta_Pagar.Cancel;
Tab_Conta_Pagar2.Close;

end;

procedure TMov_Conta_Pagar.btn_confirmaOnClick(Sender: TObject);
begin
  Try
    Tab_Conta_PagarVL_TOTAL_PAGO.Value := Tab_Conta_PagarVL_TOTAL_PAGO.Value + CurrencyEdit2.Value + CurrencyEdit8.Value + CurrencyEdit9.Value;
   // Tab_Conta_Pagar.Post;
    //DM.TBanco.CommitRetaining;
    TExecutaSql.StartTransaction;
if CurrencyEdit2.Value > 0 then begin
    Q_caixa.Active := True;
    Q_caixa.First;
    while NOT Q_caixa.Eof do begin
      if Q_caixaVL_FECHA.Value = 0 then begin
      ExecutaSql.Close;
      ExecutaSql.SQL.Clear;
      ExecutaSql.SQL.Add('insert into TAB_item_CAIXA(num_lanc,ID_CAIXA,TIPO_LANC,VL_LANC,HISTORICO)');
      ExecutaSql.SQL.Add('values (gen_id(GEN_TAB_ITEM_CAIXA_ID,1),:p_id_caixa,:p_TIPO_LANC, :p_VL_LANC, :p_HISTORICO)');
      ExecutaSql.ParamByName('p_id_caixa').AsInteger := Q_caixaID_CAIXA.AsInteger;
      ExecutaSql.ParamByName('p_TIPO_LANC').AsString := 'D';
      ExecutaSql.ParamByName('p_VL_LANC').AsCurrency := CurrencyEdit2.Value + CurrencyEdit9.Value;
      ExecutaSql.ParamByName('p_HISTORICO').AsString := 'GERADO PELO MOVIMENTO DE CONTAS A PAGAR!!! N°'+DBEdit1.Text+'';
      ExecutaSql.ExecQuery;
      end;
    Q_caixa.Next;
    end;
     //TExecutaSql.Commit;
     //TExecutaSql.StartTransaction;
    ExecutaSql.Close;
     ExecutaSql.SQL.Clear;
     ExecutaSql.sql.Add('update tab_parcela set vl_pago = :p_valpago where id_conta_pagar = :p_cod_venda and num_parc = :p_nrvenda ');
     ExecutaSql.ParamByName('p_valpago').AsFloat := CurrencyEdit2.Value;
     ExecutaSql.ParamByName('p_nrvenda').AsInteger := Q_ParcelaNUM_PARC.Value;
     ExecutaSql.ParamByName('p_cod_venda').AsInteger := Q_ParcelaID_CONTA_PAGAR.Value;
     ExecutaSql.ExecQuery;
     //TExecutaSql.Commit;

     //TExecutaSql.StartTransaction;
     ExecutaSql.Close;
     ExecutaSql.SQL.Clear;
     ExecutaSql.sql.Add('update tab_parcela set dt_pagamento = :p_valpago where id_conta_pagar = :p_cod_venda and num_parc = :p_nrvenda ');
     ExecutaSql.ParamByName('p_valpago').AsDate := DateEdit1.Date;
     ExecutaSql.ParamByName('p_nrvenda').AsInteger := Q_ParcelaNUM_PARC.Value;
     ExecutaSql.ParamByName('p_cod_venda').AsInteger := Q_ParcelaID_CONTA_PAGAR.Value;
     ExecutaSql.ExecQuery;
     //TExecutaSql.Commit;

     //TExecutaSql.StartTransaction;
     ExecutaSql.Close;
     ExecutaSql.SQL.Clear;
     ExecutaSql.sql.Add('update tab_parcela set desconto = :p_valpago where id_conta_pagar = :p_cod_venda and num_parc = :p_nrvenda ');
     ExecutaSql.ParamByName('p_valpago').AsFloat := CurrencyEdit8.Value;
     ExecutaSql.ParamByName('p_nrvenda').AsInteger := Q_ParcelaNUM_PARC.Value;
     ExecutaSql.ParamByName('p_cod_venda').AsInteger := Q_ParcelaID_CONTA_PAGAR.Value;
     ExecutaSql.ExecQuery;
     //TExecutaSql.Commit;

     //TExecutaSql.StartTransaction;
     ExecutaSql.Close;
     ExecutaSql.SQL.Clear;
     ExecutaSql.sql.Add('update tab_parcela set juros = :p_valpago where id_conta_pagar = :p_cod_venda and num_parc = :p_nrvenda ');
     ExecutaSql.ParamByName('p_valpago').AsFloat := CurrencyEdit9.Value;
     ExecutaSql.ParamByName('p_nrvenda').AsInteger := Q_ParcelaNUM_PARC.Value;
     ExecutaSql.ParamByName('p_cod_venda').AsInteger := Q_ParcelaID_CONTA_PAGAR.Value;
     ExecutaSql.ExecQuery;

     TExecutaSql.Commit;

end;
    Q_Parcela.Next;
    Tab_Conta_PagarDTVENCIMENTO.Value := Q_ParcelaDT_VENCIMENTO.Value;
  Q_Parcela.Close;
  Q_Parcela.sql.Clear;
  Q_Parcela.SQL.Add('select TAB_parcela.*, Tab_conta_pagar.id_conta_pagar from tab_conta_pagar');
  Q_Parcela.SQL.Add('inner join tab_parcela on(tab_parcela.id_conta_pagar = tab_conta_pagar.id_conta_pagar)');
  Q_Parcela.SQL.Add('where tab_parcela.id_conta_pagar = :p_nrcaixa');
  Q_Parcela.ParamByName('p_nrcaixa').AsInteger := Tab_Conta_PagarID_CONTA_PAGAR.AsInteger;
  Q_Parcela.SQL.Add('order by num_parc');
  Q_Parcela.Open;
    CurrencyEdit1.Value := CurrencyEdit1.Value - CurrencyEdit2.Value + CurrencyEdit8.Value;
    //Q_Parcela.Next;
    //Tab_Conta_PagarDTVENCIMENTO.Value := Q_ParcelaDT_VENCIMENTO.Value;
   Tab_Conta_Pagar.Post;
    DM.TBanco.CommitRetaining;

    ShowMessage('O registro foi gravado com sucesso!');
  Except
   DM.TBanco.Rollback;
   ShowMessage('Não foi possivel gravar dados!');
  Raise;
  end;

PageControl1.ActivePage := Tab_Pesquisa;
end;

procedure TMov_Conta_Pagar.FormActivate(Sender: TObject);
begin
PageControl1.ActivePage := Tab_Pesquisa;
end;

procedure TMov_Conta_Pagar.PageControl1Changing(Sender: TObject;
  var AllowChange: Boolean);
begin
AllowChange:= False;
end;

procedure TMov_Conta_Pagar.btn_excluirClick(Sender: TObject);
begin
PageControl1.ActivePage := Tab_Cadastro;
CurrencyEdit1.Value := Tab_Conta_PagarVL_TOTAL_FATURA.Value - Tab_Conta_PagarVL_TOTAL_PAGO.Value;

Tab_Conta_Pagar.Edit;


Q_Parcela.Close;
 Q_Parcela.sql.Clear;
 Q_Parcela.SQL.Add('select TAB_parcela.*, Tab_conta_pagar.id_conta_pagar from tab_conta_pagar');
 Q_Parcela.SQL.Add('inner join tab_parcela on(tab_parcela.id_conta_pagar = tab_conta_pagar.id_conta_pagar)');
 Q_Parcela.SQL.Add('where tab_parcela.id_conta_pagar = :p_nrcaixa');
 Q_Parcela.ParamByName('p_nrcaixa').AsInteger := Tab_Conta_PagarID_CONTA_PAGAR.AsInteger;
 Q_Parcela.SQL.Add('order by num_parc');
 Q_Parcela.Open;



end;

procedure TMov_Conta_Pagar.FormCreate(Sender: TObject);
begin
DM.Q_Fornecedor.Open;
Tab_Conta_Pagar.Open;
Tab_Conta_Pagar.Close;
Tab_Conta_Pagar.Open;
IBQuery1.Open;
Q_caixa.Active := true;
Q_caixa.Open;
end;

procedure TMov_Conta_Pagar.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin

    Tab_Conta_Pagar.Close;
    IBQuery1.Close;
end;
procedure TMov_Conta_Pagar.btn_contaspagasClick(Sender: TObject);
begin
PageControl1.ActivePage := Tab_Pagas;
desabilita_botoes;
btn_contaspagas.Enabled:= False;
 IBQuery1.Close;
 IBQuery1.Open;
end;

procedure TMov_Conta_Pagar.DBGrid2DblClick(Sender: TObject);
begin
PageControl1.ActivePage:= Tab_Pesquisa;
habilita_botoes;
btn_contaspagas.Enabled := True;

end;

procedure TMov_Conta_Pagar.BitBtn1Click(Sender: TObject);
begin
PageControl1.ActivePage:= Tab_Pesquisa;
habilita_botoes;
btn_contaspagas.Enabled := True;
end;

procedure TMov_Conta_Pagar.BitBtClick(Sender: TObject);
begin

nun_parc := 0;
Rx_Parcela.First;

nun_parc := Rx_Parcelanun_parc.Value + 1;

 Rx_Parcela.Open;
 Rx_Parcela.Insert;

if CurrencyEdit4.Value = 0 then begin
 CurrencyEdit3.Value := CurrencyEdit3.Value - CurrencyEdit5.Value;
 Rx_Parcelavl_parcela.Value := CurrencyEdit5.Value;
 Rx_Parceladt_vencimento.Value := DateEdit2.Date;
 Rx_Parcelanun_parc.Value := nun_parc;
 Rx_Parcela.Post;
 CurrencyEdit5.Value := 0;
end;

if CurrencyEdit4.Value > 0 then begin
  CurrencyEdit3.Value := CurrencyEdit3.Value - CurrencyEdit4.Value;
 Rx_Parcelavl_parcela.Value := CurrencyEdit4.Value;
 DateEdit2.Date := Date;
 Rx_Parcelanun_parc.Value := nun_parc;
 Rx_Parceladt_vencimento.Value := DateEdit2.Date;
 Rx_Parcela.Post;
  CurrencyEdit4.Value := 0;
end;
end;

procedure TMov_Conta_Pagar.BitBtn4Click(Sender: TObject);
begin
if not Rx_Parcela.IsEmpty then begin
CurrencyEdit3.Value := CurrencyEdit3.Value +  Rx_Parcelavl_parcela.Value;
    Rx_Parcela.Delete;
    Rx_Parcela.Refresh;


  end;
end;

procedure TMov_Conta_Pagar.Edit4Exit(Sender: TObject);
begin
CurrencyEdit6.Value := CurrencyEdit3.Value / StrToInt(Edit4.Text);
end;

procedure TMov_Conta_Pagar.BitBtn5Click(Sender: TObject);
var nr_parc : integer;
begin
Rx_Parcela.First;

nun_parc := Rx_Parcelanun_parc.Value + 1;

if CurrencyEdit7.Value > 0 then begin
Rx_Parcela.Open;
Rx_Parcela.Insert;
Rx_Parcelavl_parcela.Value := CurrencyEdit7.Value;
Rx_Parceladt_vencimento.Value := Date;
//nun_parc := 1;
Rx_Parcelanun_parc.Value := nun_parc;
Rx_Parcela.Post;

CurrencyEdit3.Value := CurrencyEdit3.Value - CurrencyEdit7.Value;
CurrencyEdit7.Value := 0;
end;

if CurrencyEdit6.Value > 0 then begin
Rx_Parcela.First;

nun_parc := Rx_Parcelanun_parc.Value + 1;
  DateEdit2.Date := Date;
  nr_parc := StrToInt(Edit4.Text);
  while nr_parc >0 do begin

    Rx_Parcela.Open;
    Rx_Parcela.Insert;
    Rx_Parcelavl_parcela.Value := CurrencyEdit6.Value;
    DateEdit2.Date := DateEdit2.Date + 31;
    Rx_Parceladt_vencimento.Value := DateEdit2.Date;

    Rx_Parcelanun_parc.Value := nun_parc;
    Rx_Parcela.Post;
    Inc(nun_parc);
    Dec(nr_parc);
    CurrencyEdit3.Value := CurrencyEdit3.Value - CurrencyEdit6.Value;
  end;
   end;
Edit4.Text := ' ';
CurrencyEdit6.Value := 0;
end;

procedure TMov_Conta_Pagar.DBEdit17Exit(Sender: TObject);
begin
CurrencyEdit3.Value := StrToFloat(DBEdit17.text);
end;

procedure TMov_Conta_Pagar.BitBtn3Click(Sender: TObject);
begin
  Try

     TExecutaSql.StartTransaction;
     Rx_Parcela.First;
    while not Rx_Parcela.Eof do
     begin
     ExecutaSql.Close;
     ExecutaSql.SQL.Clear;
     ExecutaSql.SQL.Add('insert into tab_parcela(id_conta_pagar,vl_parcela,dt_vencimento,num_parc)');
     ExecutaSql.SQL.Add('values (:p_id_conta_pagar, :p_vl_parcela, :p_dt_vencimento, :p_num_parc)');
     ExecutaSql.ParamByName('p_id_conta_pagar').AsInteger := StrToInt(DBEdit15.Text);
     ExecutaSql.ParamByName('p_vl_parcela').AsDouble := Rx_Parcelavl_parcela.Value;
     ExecutaSql.ParamByName('p_dt_vencimento').AsDate := Rx_Parceladt_vencimento.Value;
     ExecutaSql.ParamByName('p_num_parc').AsInteger := Rx_Parcelanun_parc.Value;
     ExecutaSql.ExecQuery;
     Rx_Parcela.Next;
   end;
   Rx_Parcela.last;
   Tab_Conta_Pagar2DTVENCIMENTO.Value := Rx_Parceladt_vencimento.Value;
   Tab_Conta_Pagar2.Post;
    TExecutaSql.Commit;
   Except
    TExecutaSql.Rollback;
  end;
  Tab_Conta_Pagar.Active := False;
  Tab_Conta_Pagar.Active := True;
  PageControl1.ActivePage := Tab_Pesquisa ;
  habilita_botoes;
end;

procedure TMov_Conta_Pagar.DBGrid3CellClick(Column: TColumn);
begin
DateEdit1.Date := date;
end;

procedure TMov_Conta_Pagar.DBGrid1DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn;
  State: TGridDrawState);
begin
if Tab_Conta_PagarDTVENCIMENTO.Value < (date) then
   Dbgrid1.Canvas.Font.Color:= clRed; // coloque aqui a cor desejada
   Dbgrid1.DefaultDrawDataCell(Rect, dbgrid1.columns[datacol].field, State);

if Tab_Conta_PagarDTVENCIMENTO.Value = (date) then
   Dbgrid1.Canvas.Font.Color:= clBlue; // coloque aqui a cor desejada
   Dbgrid1.DefaultDrawDataCell(Rect, dbgrid1.columns[datacol].field, State);
end;

procedure TMov_Conta_Pagar.DBEdit20Enter(Sender: TObject);
begin
CurrencyEdit3.Value := StrToFloat(DBEdit17.text);
end;

end.

