unit Unit_Relatorio_cliente_Completo;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DB, IBCustomDataSet, IBQuery, QRCtrls, QuickRpt, ExtCtrls;

type
  TRel_Clientes = class(TForm)
    Relatorio: TQuickRep;
    QRBand1: TQRBand;
    QRBand2: TQRBand;
    QRSubDetail1: TQRSubDetail;
    QRLabel1: TQRLabel;
    QRLabel2: TQRLabel;
    QRSysData1: TQRSysData;
    Ds_RelGenerico: TDataSource;
    Q_RelGenerico: TIBQuery;
    QRLabel4: TQRLabel;
    QRLabel5: TQRLabel;
    QRLabel6: TQRLabel;
    QRLabel7: TQRLabel;
    QRLabel8: TQRLabel;
    QRLabel9: TQRLabel;
    QRLabel10: TQRLabel;
    QRLabel11: TQRLabel;
    QRLabel13: TQRLabel;
    QRLabel15: TQRLabel;
    QRLabel16: TQRLabel;
    label_cnpj: TQRLabel;
    label_cpf: TQRLabel;
    QRDBText2: TQRDBText;
    QRDBText3: TQRDBText;
    QRDBText4: TQRDBText;
    QRDBText5: TQRDBText;
    QRDBText6: TQRDBText;
    QRDBText7: TQRDBText;
    QRDBText8: TQRDBText;
    QRDBText9: TQRDBText;
    QRDBText11: TQRDBText;
    QRDBText13: TQRDBText;
    QRDBText14: TQRDBText;
    edt_cnpj: TQRDBText;
    edt_cpf: TQRDBText;
    QRLabel22: TQRLabel;
    QRLabel3: TQRLabel;
    QRSysData2: TQRSysData;
    Q_RelGenericoID_CLIENTE: TIntegerField;
    Q_RelGenericoID_CIDADE: TIntegerField;
    Q_RelGenericoID_ESTADO: TIntegerField;
    Q_RelGenericoNOME_CLIENTE: TIBStringField;
    Q_RelGenericoENDERECO_CLIENTE: TIBStringField;
    Q_RelGenericoBAIRRO_CLIENTE: TIBStringField;
    Q_RelGenericoCEP_CLIENTE: TIBStringField;
    Q_RelGenericoTELEFONE1_CLIENTE: TIBStringField;
    Q_RelGenericoTELEFONE2_CLIENTE: TIBStringField;
    Q_RelGenericoRG_CLIENTE: TIBStringField;
    Q_RelGenericoINSC_ESTADUAL: TIBStringField;
    Q_RelGenericoCNPJ_CLIENTE: TIBStringField;
    Q_RelGenericoPESSOA: TIBStringField;
    Q_RelGenericoSEXO_CLIENTE: TIBStringField;
    Q_RelGenericoEMAIL_CLIENTE: TIBStringField;
    Q_RelGenericoDTCADASTRO_CLIENTE: TDateField;
    Q_RelGenericoDTNASC_CLIENTE: TDateField;
    Q_RelGenericoCPF_CLIENTE: TIBStringField;
    Q_RelGenericoNOME_CLIENTE1: TIBStringField;
    Q_RelGenericoUF: TIBStringField;
    Q_RelGenericoNOME_CIDADE: TIBStringField;
    QRLabel12: TQRLabel;
    QRDBText1: TQRDBText;
    QRLabel14: TQRLabel;
    QRDBText10: TQRDBText;
    QRLabel17: TQRLabel;
    QRDBText12: TQRDBText;
    QRLabel18: TQRLabel;
    QRDBText15: TQRDBText;
    QRLabel19: TQRLabel;
    QRDBText16: TQRDBText;
    procedure RelatorioBeforePrint(Sender: TCustomQuickRep;
      var PrintReport: Boolean);
    procedure RelatorioAfterPrint(Sender: TObject);
    procedure QRSubDetailBeforePrint(Sender: TQRCustomBand;
      var PrintBand: Boolean);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Rel_Clientes: TRel_Clientes;

implementation

uses UnitMenu, Unit_Rel_tela_fonecedor, Unit_Rel_tela_Cliente;// Unit_Rel_Tela_Fornecedores;



{$R *.dfm}

procedure TRel_Clientes.RelatorioBeforePrint(Sender: TCustomQuickRep;
  var PrintReport: Boolean);
  Var cSql : String;
begin

     cSql := '';

        // tudo o que estiver dentro do with Rel_Contas_Pagar nao é preciso referencialo no decorrer do código
         with Rel_Tela_Cliente do begin

         cSql := ' select tab_cliente.*, tab_cliente.nome_cliente,tab_estado.uf,tab_cidade.nome_cidade '+
                 ' from  tab_estado, tab_cidade '+
                 ' inner join tab_cliente on(tab_cliente.id_estado = tab_estado.id_estado and tab_cliente.id_cidade = tab_cidade.id_cidade) ';



         if edt_fornecedor.KeyValue <> null then
         cSql := cSql + ' and tab_cliente.id_cliente = :p_fornecedor ';


          case rg_ordena.ItemIndex of

         0: cSql:= cSql + ' order by tab_cliente.id_cliente ';
         1: cSql:= cSql + ' order by tab_cliente.nome_cliente';
         2: cSql:= cSql + ' order by tab_cidade.id_cidade ';

         end;

     Q_RelGenerico.Close;
     Q_RelGenerico.SQL.Clear;
     Q_RelGenerico.SQL.Add(cSql); //aqui estou colocando todo o conteudo do sql dentro da query


     if edt_fornecedor.KeyValue <> Null then
     Q_RelGenerico.ParamByName('p_fornecedor').AsString := IntToStr(edt_fornecedor.KeyValue);

     Q_RelGenerico.Prepare;
     Q_RelGenerico.Open;
     
if Q_RelGenericoPESSOA.VALUE = 'JURIDICA' then begin
    edt_cnpj.Enabled       := True;
    edt_cpf.Enabled        := False;
    label_cnpj.Enabled     := True;
    label_cpf.Enabled      := False;
  end;

  if Q_RelGenericoPESSOA.Value = 'FISICA' then begin
      edt_cnpj.Enabled     := False;
      edt_cpf.Enabled      := True;
      label_cnpj.Enabled   := False;
      label_cpf.Enabled    := True;
  end;

end;
Try
   Q_RelGenerico.Open;
Except
Raise;
end;

end;

procedure TRel_Clientes.RelatorioAfterPrint(Sender: TObject);
begin


Try
   Q_RelGenerico.Close;
Except
Raise;


end;

end;

procedure TRel_Clientes.QRSubDetailBeforePrint(Sender: TQRCustomBand;
  var PrintBand: Boolean);
begin

  if Q_RelGenericoPESSOA.VALUE = 'JURIDICA' then begin
    edt_cnpj.Enabled       := True;
    edt_cpf.Enabled        := False;
    label_cnpj.Enabled     := True;
    label_cpf.Enabled      := False;
    QRLabel14.Enabled:= false;
    QRDBText10.Enabled := false;
    QRLabel15.Enabled:= true;
    QRDBText13.Enabled := true;
  end;

  if Q_RelGenericoPESSOA.Value = 'FISICA' then begin
      edt_cnpj.Enabled     := False;
      edt_cpf.Enabled      := True;
      label_cnpj.Enabled   := False;
      label_cpf.Enabled    := True;
      QRLabel14.Enabled:= true;
      QRDBText10.Enabled := true;
      QRLabel15.Enabled:= false;
      QRDBText13.Enabled := false;
  end;
end;

end.
