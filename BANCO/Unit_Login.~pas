unit Unit_Login;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, IBDatabase, DB, IBCustomDataSet, 
  XPMan, jpeg, ExtCtrls, sSkinProvider, sSkinManager, sBitBtn, sLabel,
  sEdit, sGroupBox,  IniFiles, IB, Grids, DBGrids, IBQuery;

type
  TForm_LOGIN = class(TForm)
    sGroupBox1: TsGroupBox;
    EdtApelido: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    EdtSenha: TEdit;
    BtnCancelar: TBitBtn;
    BtnOk: TBitBtn;
    Image2: TImage;
    Image1: TImage;
    BANCO_DADOS: TIBDatabase;
    IBTransaction1: TIBTransaction;
    ibquerylogin: TIBQuery;
    dsAcesso: TDataSource;
    ibqueryloginID_FUNCIONARIO: TIntegerField;
    ibqueryloginNOME: TIBStringField;
    ibqueryloginENDERECO: TIBStringField;
    ibqueryloginBAIRRO: TIBStringField;
    ibqueryloginCEP: TIBStringField;
    ibqueryloginDT_CADASTRO: TDateField;
    ibqueryloginDT_NASC: TDateField;
    ibqueryloginTELEFONE: TIBStringField;
    ibqueryloginRG: TIBStringField;
    ibqueryloginCPF: TIBStringField;
    ibqueryloginSENHA: TIBStringField;
    ibqueryloginLOGIN: TIBStringField;
    ibqueryloginID_CIDADE: TIntegerField;
    ibqueryloginID_ESTADO: TIntegerField;
    sSkinManager1: TsSkinManager;
    sSkinProvider1: TsSkinProvider;
    procedure BtnCancelarClick(Sender: TObject);
    procedure BtnOkClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
  tentativas:Integer;
    { Private declarations }
  public
  baco : String;
  USUARIO:STRING;
    iniconf:TIniFile;
    { Public declarations }
  end;

var
  Form_LOGIN: TForm_LOGIN;

implementation

uses Unit_Dm, UnitMenu;

{$R *.dfm}

procedure TForm_LOGIN.BtnCancelarClick(Sender: TObject);
begin
Application.Terminate;
end;

procedure TForm_LOGIN.BtnOkClick(Sender: TObject);
begin
ibquerylogin.close;
    ibquerylogin.ParamByName('nome').AsString := EdtApelido.Text;
    ibquerylogin.ParamByName('senha').AsString := EdtSenha.Text;
    ibquerylogin.Open;
    if (ibquerylogin.RecordCount > 0) then
    begin
        //showmessage('acesso liberado');
        //usuario:=ibqueryloginUSU_LOGIN.Value; //tanto faz usar essa linha ou a de baixo
        usuario:= EdtApelido.Text;

    end
    else
    begin
        modalresult:=mrNone; //anula acao do OK
        if (tentativas = 1) then
        begin
             inc(tentativas);
             showmessage('acesso não liberado, voce só tem mais uma chance');
        end
        else
        begin
           showmessage('acesso NEGADO');
           close;
        end;

     END;

end;

procedure TForm_LOGIN.FormCreate(Sender: TObject);

begin
//
tentativas:=1;
//Application.CreateForm(TDM,DM);

  iniconf:=TIniFile.Create(ExtractFilePath(Application.ExeName)+'conf.ini');


      BANCO_DADOS.Connected:=false;
        baco := iniconf.ReadString('banco_dados','path','');

     BANCO_DADOS.DatabaseName := baco;

    try
         BANCO_DADOS.Connected := true;
         IBTransaction1.Active := true;
         //dm.tab_login.Active:=true;
         //dm.tab_login.Open;
         //dm.Q_Caixa.Active := True;
         //dm.Q_Caixa.Open;
      except
          showmessage('Erro na conexão com o Banco de Dados');
      end;
end;

end.
